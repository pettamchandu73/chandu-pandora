#
# $Id: msicp.conf,v 1.21.4.1 2003/11/10 15:35:15 andrei Exp $
#
# simple quick-start config script
#
                                                                                                                             
# ----------- Global configuration parameters ------------------------
                                                                                                                             
fork=yes
#log_stderror=no        # (cmd line: -E)
#debug=4

#### For handling NAT issues through media proxy, reply should not be sent to via 8/4/2004 -- by Ranga

reply_to_via=no
check_via=no   # (cmd. line: -v)
dns=no           # (cmd. line: -r)
rev_dns=no      # (cmd. line: -R)
port=5080
mhomed=yes
listen=208.77.5.32
listen=10.20.8.132
fifo="/home/wsadmin/wsmsicp/msicp_fifo"

wsdb_fifo_count=5
ws_duplicate_routeno=10
ws_ctccall_flag = 0
ws_db_fifo_name="/home/wsadmin/wsmsicp/msicp_fifo_db"

# ------------------ module loading ----------------------------------
                                                                                                                             
# Uncomment this if you want to use SQL database
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/mysql.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/sl.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/tm.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/rr.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/avp.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/worksmart.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/wsutils.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/racc.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/textops.so"
loadmodule "/home/wsadmin/wsmsicp/lib/msicp/modules/maxfwd.so"

# -------------------------  request routing logic -------------------
modparam("tm", "fr_inv_timer", 250)
modparam("tm", "fr_timer",15)

# Comments by PBX TEAM -- Beware of changing this
# This parameter MUST always be set to zero
# for Worksmart PBX, behaviour is unpredictable when set to 1.
modparam("tm", "restart_fr_on_each_reply", 0)   
modparam("tm", "wt_timer", 20)
modparam("tm", "cancel_retransmission_flag",1)

modparam("mysql","mysqlerrornos","145,28,1015,1037,1040,1043,1053,1165,1177,1179,1184,1192,1194,1196,1213,1223,2003,2055,2013,2008,2006,2055")

#Parameters required for workSmart
modparam ("worksmart", "db_url", "mysql://wsadmin:worksmart@10.20.48.101:3306/livepbx,mysql://wsadmin:worksmart@10.20.48.100:3306/livepbx")
modparam ("worksmart", "proxy_domain", "208.77.5.36")
#modparam ("worksmart", "media_server", "10.20.8.199:5095")
#modparam ("worksmart", "media_server1", "10.20.8.45:5095")
#modparam ("worksmart", "media_server2", "10.20.8.199:5095")
#modparam ("worksmart", "acd_server", "10.20.8.199:5085")
#modparam ("worksmart", "acd_server1", "10.20.8.45:5085")
#modparam ("worksmart", "acd_server2", "10.20.8.199:5085")
modparam ("worksmart", "mediaserver_ips", "10.20.8.39:6090|10.20.8.140:6090|10.20.8.41:6090|10.20.8.42:6090|10.20.8.43:6090|10.20.8.38:6090|10.20.8.50:6090|10.20.8.229:6090|10.20.8.64:6090|10.20.8.63:6090|10.20.8.65:6090|10.20.8.66:6090")

#Dialing parameters for Worksmart
modparam ("worksmart", "national_prefix", "1")
modparam ("worksmart", "international_prefix", "011")
modparam ("worksmart", "prefix_length", 3)
#modparam ("worksmart", "outbound_proxy", "10.20.8.199:5065")
#modparam ("worksmart", "outbound_proxy1", "10.20.8.45:5065")
modparam ("worksmart", "conference_server", "10.20.8.125:5088")
modparam ("worksmart", "emergency_server", "208.77.4.87:5080")
modparam ("worksmart", "fax_server","208.77.5.34:5090")
modparam ("worksmart", "ws_support_site", "panterranetworks-com")
modparam ("worksmart", "ws_support_exten", "9044")

#Smart connect server IP should be changed
modparam ("worksmart", "smartconnect_server", "66.238.90.88:5060")

modparam ("worksmart", "ws_registrar", "10.20.8.36:5060|208.77.5.36:5060|10.20.8.37:5060|208.77.5.37:5060|10.20.8.38:5060|208.77.5.38:5060|10.20.8.59:5060|208.77.5.59:5060|10.20.8.60:5060|208.77.5.60:5060|10.20.8.62:5060|208.77.5.62:5060|10.20.8.86:5060|208.77.5.86:5060|10.20.8.245:5060|208.77.5.145:5060|10.20.8.194:5060|208.77.5.194:5060|10.20.8.214:5060|208.77.5.144:5060|10.20.8.67:5060|208.77.5.67:5060")
modparam ("worksmart", "ws_icpips", "10.20.8.132:5080|10.20.8.133:5080|10.20.8.39:5080")

#including 3pcc server .and own ip for CNAM request
modparam ("worksmart", "3pcc_server", "10.20.8.114:50060")
modparam ("worksmart","own_ip","10.20.8.132")

modparam ("worksmart", "acduseragent", "WsMServer PBX")
modparam ("worksmart", "msuseragent", "WsMServer PBX")
modparam ("worksmart", "registrar_domain", "p101.wspbx.com:5060")
modparam ("worksmart", "ws_dummy_site", "panterranetworks-com")

#UMSLB Configuration
modparam ("worksmart", "umslb_proxy","10.20.8.224:6085")
modparam ("worksmart", "umslb_proxy1","10.20.8.223:6085")

#WSICP Configuration
modparam ("worksmart", "wsicp_primary","10.20.8.223:6050")
modparam ("worksmart", "wsicp_secondary","10.20.8.224:6050")


#Location parameters for Worksmart: Location, and timezone
modparam ("worksmart", "country_code", 1)
modparam ("worksmart", "servertz", "-07:00")
modparam ("worksmart", "mwi_subscribe", "/var/spool/wsmserver/voicemail/mwi/subscribe")
modparam ("worksmart", "mwi_notify", "/var/spool/wsmserver/voicemail/mwi/mwi-immediate")

modparam ("worksmart", "msuris", "xfer|cmd|bla|ivr|nop|iext|icom|opr|ext|cnf|pkp|dir|inv|agt|did|mwi|ptt|wsdis|obxfer|act|moc|mext|intc|dcp|gcp|crt|vmr|vmo|inbxfer|gext|wsucapp")
modparam ("worksmart", "omsuris", "oms")
modparam ("worksmart", "acduris", "acd|acdsup")
modparam ("worksmart", "max_bla_lines", 7)

#Added for Splitted Registrar on 26-Nov-2011
#modparam ("worksmart", "ws_proxy_list", "10.20.8.36:5060")

#Enable or Disable CNAM feature
modparam ("worksmart", "cnam", "no")

modparam ("worksmart", "datacenter_id", 1)
modparam ("worksmart", "route_acd_conf_calls_to_homedc", 1)
modparam ("worksmart", "other_datacenterid", 2)
modparam ("worksmart", "global_callblocking", 1)
modparam ("worksmart", "serviceid",4)
modparam ("worksmart","is_nested_group",1)
modparam ("worksmart","max_forks_for_group",150) # Max actual forks
modparam ("worksmart","shmcleartimer",60)
modparam ("worksmart","shmdeletetimer",10)
modparam ("worksmart","shmsegments",3000)
modparam ("worksmart","shmsegments_prev",3000) 
modparam ("worksmart","fgrphuntgrouplimit",200)  #Max forks limit from DB
modparam ("worksmart","watchersleep",2)
modparam ("worksmart","MAX_FORK_BRANCHES",20)
modparam ("worksmart","enable_dc_transfer",1)
modparam ("worksmart","extonly_enable",1) # 0 disable ext911 feature, 1 enable  ext911 feature
modparam ("worksmart", "Contact_Regcheck", 1)
modparam ("worksmart", "Contact_invalid_Chars", "'\"")
modparam ("worksmart", "mwi_subscribe_flag", 1)
modparam ("worksmart", "delete_to_header_failover", 0)
modparam ("worksmart", "primary_fwdout_server","208.77.4.88:5070")
modparam ("worksmart", "secondary_fwdout_server","208.77.6.145:5070")
modparam ("worksmart", "max_ext_len", 5)   #Added for maximum length for a extension to implement telephony call routing feature
modparam ("worksmart","engage_mediaanchor",1)
modparam ("worksmart","enable_cos_transfer",1)

#Dialing parameters for racc
modparam ("racc", "wsdb_fifo_name", "/home/wsadmin/wsmsicp/msicp_fifo_db")
modparam ("racc", "stir_fifo_name", "/home/wsadmin/wsmsicp/stir_fifo_db")
modparam ("racc","is_billing_flag",1)
modparam ("racc","enable_logs_for_billingtest",1)
modparam ("worksmart","endpoint_cdr_prefix", "endpoint_details_")
modparam ("worksmart", "badnumber_reject_code", 603)
modparam ("worksmart", "specialnumbers", "911|411|16080")
modparam("worksmart", "nGrpId_Parser", 6) 
modparam ("worksmart", "cdr_callerid_block", 1)
modparam ("worksmart", "stir_shaken_route", 1)

# main routing logic
route {
	# initial sanity checks -- messages with
	# max_forwards==0, or excessively long requests
	if (!mf_process_maxfwd_header("10"))
	{
		if (method != "ACK")
		{
			sl_send_reply("483","Too Many Hops");
			break;
		}
		drop ();
	}

	if (msg:len > 4096)
	{
		if (method != "ACK")
		{
			sl_send_reply("513", "Message too big");
			break;
		}
		drop();
	}

	
	record_route();
	# loose-route processing
	if (loose_route())
	{
		if (method=="INVITE")
		{
			sl_send_reply("100", "Trying..");
		}
		t_relay();
		break;
	}
	

	if (method=="NOTIFY")
	{
		if((src_ip == 10.20.8.39 || src_ip == 10.20.8.140 || src_ip == 10.20.8.41 || src_ip == 10.20.8.42 || src_ip == 10.20.8.43 || src_ip == 10.20.8.64 || src_ip == 10.20.8.63 || src_ip == 10.20.8.65 || src_ip == 10.20.8.66 || src_ip == 10.20.8.67) && src_port == 6090){
			ws_process_notify("1");
			break;
		}	
		else
		{
			sl_send_reply("403", "Forbidden");
			break;
		}		
        }

	if (method == "INVITE")
        {
	remove_hf("X-Source-Hop");
	append_hf("X-Source-Hop: MSICP\r\n");
		#Accepting calls only from Media and OMS servers --kkmurthy 2009-10-10
	    	if(src_ip == 10.20.8.39 || src_ip == 10.20.8.140 || src_ip == 10.20.8.41 || src_ip == 10.20.8.42 || src_ip == 10.20.8.43 || src_ip == 10.20.8.38 || src_ip == 10.20.8.50 || src_ip == 10.20.8.229 || src_ip == 208.77.5.39 || src_ip == 208.77.5.40 || src_ip == 208.77.5.41 || src_ip == 208.77.5.42 || src_ip == 208.77.5.43 || src_ip == 208.77.5.38 || src_ip == 208.77.5.50 || src_ip == 208.77.5.229 || src_ip == 10.20.8.64 || src_ip == 208.77.5.64 || src_ip == 10.20.8.63 || src_ip == 208.77.5.63 || src_ip == 10.20.8.65 || src_ip == 208.77.5.65 || src_ip == 10.20.8.66 || src_ip == 208.77.5.66 || src_ip == 10.20.8.67 || src_ip == 208.77.5.67 || src_ip == 10.20.8.132){

                	sl_send_reply("100", "Trying");

	                if (search("Replaces: "))
        	        {
                	        if(!ws_process_invite_replaces("1"))
                        	{
	                            if (!worksmart_get_dialplan("1", "6"))
        	                    {
                	                sl_send_reply("404", "Not found From WSDialPlan");
                        	        break;
	                            }
        	                }
                	        break;
	                }

        	        if (!worksmart_get_dialplan("1", "1"))
                	{
	                   sl_send_reply("404", "Not found From WSDialPlan");
        	           break;
	                }
		}else{
                 	sl_send_reply("603", "Declined. Unauthorized Host");
                	break;
		}
                break;
        }

	t_relay();
	break;
}

route [2] {

  	log (1, "In Route 2 .... \n");
	
	if (t_check_status ("302|301")) {
	        log(1, "Moved Temporarily\n\n");
					ws_process_302("1");
	        t_relay();
	        break;
	}

	if (method == "INVITE")
	{
		revert_uri();
		t_on_reply("1");
		
			if((uri =~ "sip:bla-") || (uri =~ "sip:cmd-") || (uri =~ "sip:gext-") || (uri =~ "sip:iext-") || (uri =~ "sip:vmo-") || (uri =~ "sip:obxfer-") || (uri =~ "sip:ext-") || (uri =~ "sip:vmd-") || (uri =~ "sip:did-")){
				if( t_check_status ("486")){
					if (!worksmart_get_dialplan("2", "1")){
						sl_send_reply("404", "Not found");
						break;
					}
				}else{
					if (!worksmart_get_dialplan("2", "4")){
						sl_send_reply("404", "Not found");
						break;
					}
				}
				break;
			}else{
				if (!worksmart_get_dialplan("2", "1")){
						sl_send_reply("404", "Not found");
						break;
				}
				break;
			}
			
		#if (!worksmart_get_dialplan("2", "1"))
		#{
		#	sl_send_reply("404", "Not found");
		#	break;
		#}

	#	break;
	}

	t_relay();
	break;
}

route [3] {

	log (1, "In Route 3 .... \n");

	if (t_check_status ("302|301")) {
	        log(1, "Moved Temporarily\n\n");
					ws_process_302("1");
	        t_relay();
	        break;
	}

      
	if (method == "INVITE")
	{
		revert_uri();
		t_on_reply("1");
		if((uri =~ "sip:bla-") || (uri =~ "sip:cmd-") || (uri =~ "sip:gext-") || (uri =~ "sip:iext-") || (uri =~ "sip:vmo-") || (uri =~ "sip:obxfer-") || (uri =~ "sip:ext-") || (uri =~ "sip:vmd-") || (uri =~ "sip:did-")){	
			if( t_check_status ("486")){
				if (!worksmart_get_dialplan("3", "1")){
					sl_send_reply("404", "Not found");
					break;
				}
			}else{
				if (!worksmart_get_dialplan("3", "4")){
					sl_send_reply("404", "Not found");
					break;
				}
			}
			break;
		}else{
			if (!worksmart_get_dialplan("3", "1")){
				sl_send_reply("404", "Not found");
				break;
			}
			break;
		}

		#if (!worksmart_get_dialplan("3", "1"))
		#{
		#	sl_send_reply("404", "Not found");
		#	break;
		#}

	#	break;
	}

	t_relay();
	break;
}

route [4] {

	log (1, "In Route 4 .... \n");

	if (t_check_status ("302|301")) {
	        log(1, "Moved Temporarily\n\n");
					ws_process_302("1");
	        t_relay();
	        break;
	}
       
	if (method == "INVITE")
	{
		revert_uri();
		t_on_reply("1");
		if((uri =~ "sip:bla-") || (uri =~ "sip:cmd-") || (uri =~ "sip:gext-") || (uri =~ "sip:iext-") || (uri =~ "sip:vmo-") || (uri =~ "sip:obxfer-") || (uri =~ "sip:ext-") || (uri =~ "sip:vmd-") || (uri =~ "sip:did-")){
			if( t_check_status ("486")){
				if (!worksmart_get_dialplan("4", "1")){
					sl_send_reply("404", "Not found");
					break;
				}
			}else{
				if (!worksmart_get_dialplan("4", "4")){
					sl_send_reply("404", "Not found");
					break;
				}
			}
			break;
		}else{
			if (!worksmart_get_dialplan("4", "1")){
				sl_send_reply("404", "Not found");
				break;
			}
			break;
		}

		#if (!worksmart_get_dialplan("4", "1"))
		#{
		#	sl_send_reply("404", "Not found");
		#	break;
		#}

	#	break;
	}

	t_relay();
	break;
}

route [5] {

	log (1, "In route 5 .... \n");

	if (t_check_status ("302|301")) {
	        log(1, "Moved Temporarily\n\n");
					ws_process_302("1");
	        t_relay();
	        break;
	}
      
	if (method == "INVITE")
	{
		revert_uri();
		t_on_reply("1");
		if((uri =~ "sip:bla-") || (uri =~ "sip:cmd-") || (uri =~ "sip:gext-") || (uri =~ "sip:iext-") || (uri =~ "sip:vmo-") || (uri =~ "sip:obxfer-") || (uri =~ "sip:ext-") || (uri =~ "sip:vmd-") || (uri =~ "sip:did-")){
			if( t_check_status ("486")){
				if (!worksmart_get_dialplan("5", "1")){
					sl_send_reply("404", "Not found");
					break;
				}
			}else{
				if (!worksmart_get_dialplan("5", "4")){
					sl_send_reply("404", "Not found");
					break;
				}
			}
			break;
		}else{
			if (!worksmart_get_dialplan("5", "1")){
				sl_send_reply("404", "Not found");
				break;
			}
			break;
		}

		#if (!worksmart_get_dialplan("5", "1"))
		#{
		#	sl_send_reply("404", "Not found");
		#	break;
		#}

	#	break;
	}

	t_relay();
	break;
}

# MEDIA SERVER FAILOVER ROUTES -- DO NOT CONFUSE WITH FAILURE ROUTES
route[6] {
	
	log(1, "In route 6 .... \n");

	if (t_check_status ("603|403")){
               break;
        }


	if (method == "INVITE")
	{
		t_on_reply("1");
		
		if (t_check_status ("408"))
		{
			use_secondary_server("MediaServer");
			if (!worksmart_get_dialplan("1", "2"))
			{
				sl_send_reply("404", "Not found");
			}

			break;
		}
		else
		{
			if (!worksmart_get_dialplan("2", "1"))
            		{
		                sl_send_reply("404", "Not found");
            		}
		        break;
		}
	}

	t_relay();
	break;
}

route[7] {

    log(1, "In route 7 .... \n");
	
    if (t_check_status ("603|403")){
         break;
    }


    if (method == "INVITE")
    {
        t_on_reply("1");

        if (t_check_status ("408"))
        {
	    use_secondary_server("MediaServer");
            if (!worksmart_get_dialplan("2", "2"))
            {
                sl_send_reply("404", "Not found");
            }

            break;
        }
	else
        {
            if (!worksmart_get_dialplan("3", "1"))
            {
                sl_send_reply("404", "Not found");
            }
            break;
        }

    }

    t_relay();
    break;
}


route[8] {

    log(1, "In route 8 .... \n");

    if (t_check_status ("603|403")){
        break;
    }

    if (method == "INVITE")
    {
        t_on_reply("1");

        if (t_check_status ("408"))
        {
	    use_secondary_server("MediaServer");
            if (!worksmart_get_dialplan("3", "2"))
            {
                sl_send_reply("404", "Not found");
            }

            break;
        }
  	else
        {
            if (!worksmart_get_dialplan("4", "1"))
            {
                sl_send_reply("404", "Not found");
            }
            break;
        }

    }

    t_relay();
    break;
}

route[9] {

    log(1, "In route 9 .... \n");

    if (t_check_status ("603|403")){
        break;
    }

    if (method == "INVITE")
    {
        t_on_reply("1");

        if (t_check_status ("408"))
        {
	    use_secondary_server("MediaServer");
            if (!worksmart_get_dialplan("4", "2"))
            {
                sl_send_reply("404", "Not found");
            }

            break;
        }
  	else
        {
            if (!worksmart_get_dialplan("5", "1"))
            {
                sl_send_reply("404", "Not found");
            }
            break;
        }

    }

    t_relay();
    break;
}

route[10] {

    log(1, "In route 10 .... \n");

    if (t_check_status ("603|403")){
	break;
    }


    if (method == "INVITE")
    {
        t_on_reply("1");

        if (t_check_status ("408"))
        {
	    use_secondary_server("MediaServer");
            if (!worksmart_get_dialplan("5", "2"))
            {
                sl_send_reply("404", "Not found");
            }

            break;
        }
    }

    t_relay();
    break;
}

# ACD SERVER FAILOVER ROUTES -- DO NOT CONFUSE WITH FAILURE ROUTES -- NOT USED AT THE MOMENT
route[11] {

        log (1, "In route 11 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408"))
                {
                        use_secondary_server("ACDServer");
                        if (!worksmart_get_dialplan("1", "3"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
        	{
	            if (!worksmart_get_dialplan("2", "1"))
        	    {
                	sl_send_reply("404", "Not found");
            	    }
	            break;
        	}

        }

        t_relay();
        break;
}

route[12] {

        log (1, "In route 12 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408"))
                {
                        use_secondary_server("ACDServer");
                        if (!worksmart_get_dialplan("2", "3"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
        	{
	            if (!worksmart_get_dialplan("3", "1"))
        	    {
                	sl_send_reply("404", "Not found");
            	    }
	            break;
        	}

        }

        t_relay();
        break;
}

route[13] {

        log (1, "In route 13 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408"))
                {
                        use_secondary_server("ACDServer");
                        if (!worksmart_get_dialplan("3", "3"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
        	{
	            if (!worksmart_get_dialplan("4", "1"))
        	    {
                	sl_send_reply("404", "Not found");
            	    }
	            break;
        	}

        }

        t_relay();
        break;
}

route[14] {

        log (1, "In route 14 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408"))
                {
                        use_secondary_server("ACDServer");
                        if (!worksmart_get_dialplan("4", "3"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
        	{
	            if (!worksmart_get_dialplan("5", "1"))
        	    {
                	sl_send_reply("404", "Not found");
            	    }
	            break;
        	}

        }

        t_relay();
        break;
}

route[15] {

        log (1, "In route 15 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408"))
                {
                        use_secondary_server("ACDServer");
                        if (!worksmart_get_dialplan("5", "3"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
        }

        t_relay();
        break;
}


# OMS FAILOVER ROUTES -- DO NOT CONFUSE WITH FAILURE ROUTES
route[16] {

        log (1, "In route 16 .... \n");
        if (t_check_status ("486")){
               break;
            }
        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408|481"))
                {
                        use_secondary_server("OMSServer");
                        if (!worksmart_get_dialplan("1", "4"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
                {
                    if (!worksmart_get_dialplan("2", "1"))
                    {
                        sl_send_reply("404", "Not found");
                        }
                    break;
                }

        }

        t_relay();
        break;
}

route[17] {
        log (1, "In route 17 .... \n");
        if (t_check_status ("486")){
               break;
            }
        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408|481"))
                {
                        use_secondary_server("OMSServer");
                        if (!worksmart_get_dialplan("2", "4"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
        	{
	            if (!worksmart_get_dialplan("3", "1"))
        	    {
                	sl_send_reply("404", "Not found");
            	    }
	            break;
        	}

        }

        t_relay();
        break;
}

route[18] {

        log (1, "In route 18 .... \n");
        if (t_check_status ("486")){
               break;
            }
        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408|481"))
                {
                        use_secondary_server("OMSServer");
                        if (!worksmart_get_dialplan("3", "4"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
        	{
	            if (!worksmart_get_dialplan("4", "1"))
        	    {
                	sl_send_reply("404", "Not found");
            	    }
	            break;
        	}

        }

        t_relay();
        break;
}

route[19] {

        log (1, "In route 19 .... \n");
        if (t_check_status ("486")){
               break;
            }
        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408|481"))
                {
                        use_secondary_server("OMSServer");
                        if (!worksmart_get_dialplan("4", "4"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
                else
        	{
	            if (!worksmart_get_dialplan("5", "1"))
        	    {
                	sl_send_reply("404", "Not found");
            	    }
	            break;
        	}

        }

        t_relay();
        break;
}

route[20] {

        log (1, "In route 20 .... \n");
        if (t_check_status ("486")){
               break;
            }
        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408|481"))
                {
                        use_secondary_server("OMSServer");
                        if (!worksmart_get_dialplan("5", "4"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
        }

        t_relay();
        break;
}


#This is for supervisor transfer DID
route[21] {

        log (1, "In route 21 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");
                if (t_check_status ("481|482|486"))
                {
                        if (!worksmart_get_dialplan("2", "7"))
                        {
                                sl_send_reply("404", "Not found");
                        }
                        break;
                }
        }
        t_relay();
        break;
}
route[22] {

        log (1, "In route 22 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");
                if (t_check_status ("481|482|486"))
                {
                        if (!worksmart_get_dialplan("3", "8"))
                        {
                                sl_send_reply("404", "Not found");
                        }
                        break;
                }
        }

        t_relay();
        break;
}

route[23] {

        log (1, "In route 23 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("481|482|486"))
                {
                        if (!worksmart_get_dialplan("4", "9"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
        }
        t_relay();
        break;
}

route[24] {

        log (1, "In route 24 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("481|482|486"))
                {
                        if (!worksmart_get_dialplan("5", "10"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
        }
        t_relay();
        break;
}


route[25] {

        log (1, "In route 25 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("481|482|486"))
                {
                        if (!worksmart_get_dialplan("6", "11"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
        }
        t_relay();
        break;
}

# failure routes for bla routing --vravi
route[26] {
        log (1, "In Route 26\n");
        if (t_check_status ("302|301")) {
                log(1, "Moved Temporarily\n\n");
                ws_process_302("1");
                t_relay();
                break;
        }
        if (method == "INVITE")
        {
                revert_uri();
                t_on_reply("1");
		if((uri =~ "sip:bla-") || (uri =~ "sip:cmd-") || (uri =~ "sip:gext-") || (uri =~ "sip:iext-") || (uri =~ "sip:vmo-") || (uri =~ "sip:obxfer-") || (uri =~ "sip:ext-") || (uri =~ "sip:vmd-") || (uri =~ "sip:did-")){
			if( t_check_status ("486")){
				if (!worksmart_get_dialplan("6", "1")){
					sl_send_reply("404", "Not found");
					break;
				}
			}else{
				if (!worksmart_get_dialplan("6", "4")){
					sl_send_reply("404", "Not found");
					break;
				}
			}
			break;
		}else{
			if (!worksmart_get_dialplan("6", "1")){
				sl_send_reply("404", "Not found");
				break;
			}
			break;
		}
                #if (!worksmart_get_dialplan("6", "1"))
                #{
                #        sl_send_reply("404", "Not found");
                #        break;
                #}

               # break;
        }

        t_relay();
        break;
} 

route[27] {
        log (1, "In Route 27\n");
        if (t_check_status ("302|301")) {
                log(1, "Moved Temporarily\n\n");
                ws_process_302("1");
                t_relay();
                break;
        }

        if (method == "INVITE")
        {
                revert_uri();
                t_on_reply("1");
		if((uri =~ "sip:bla-") || (uri =~ "sip:cmd-") || (uri =~ "sip:gext-") || (uri =~ "sip:iext-") || (uri =~ "sip:vmo-") || (uri =~ "sip:obxfer-") || (uri =~ "sip:ext-") || (uri =~ "sip:vmd-") || (uri =~ "sip:did-")){
			if( t_check_status ("486")){
				if (!worksmart_get_dialplan("7", "1")){
					sl_send_reply("404", "Not found");
					break;
				}
			}else{
				if (!worksmart_get_dialplan("7", "4")){
					sl_send_reply("404", "Not found");
					break;
				}
			}
			break;
		}else{
			if (!worksmart_get_dialplan("7", "1")){
				sl_send_reply("404", "Not found");
				break;
			}
			break;
		}

                #if (!worksmart_get_dialplan("7", "1"))
                #{
                #        sl_send_reply("404", "Not found");
                #        break;
                #}

               # break;
        }

        t_relay();
        break;
}

route[28] {
        log (1, "In Route 28\n");
        if (t_check_status ("302|301")) {
                log(1, "Moved Temporarily\n\n");
                ws_process_302("1");
                t_relay();
                break;
        }

        if (method == "INVITE")
        {
                revert_uri();
                t_on_reply("1");
		if((uri =~ "sip:bla-") || (uri =~ "sip:cmd-") || (uri =~ "sip:gext-") || (uri =~ "sip:iext-") || (uri =~ "sip:vmo-") || (uri =~ "sip:obxfer-") || (uri =~ "sip:ext-") || (uri =~ "sip:vmd-") || (uri =~ "sip:did-")){
			if( t_check_status ("486")){
				if (!worksmart_get_dialplan("8", "1")){
					sl_send_reply("404", "Not found");
					break;
				}
			}else{
				if (!worksmart_get_dialplan("8", "4")){
					sl_send_reply("404", "Not found");
					break;
				}
			}
			break;
		}else{
			if (!worksmart_get_dialplan("8", "1")){
				sl_send_reply("404", "Not found");
				break;
			}
			break;
		}

               #if (!worksmart_get_dialplan("8", "1"))
               #{
               #         sl_send_reply("404", "Not found");
               #         break;
               #}

               # break;
        }

        t_relay();
        break;
}

route[29] {

        log (1, "In route 29 .... \n");

        if (method == "INVITE")
        {
                t_on_reply("1");

                if (t_check_status ("408"))
                {
                        use_secondary_wsicp_server("1");
                        if (!worksmart_get_dialplan("2", "1"))
                        {
                                sl_send_reply("404", "Not found");
                        }

                        break;
                }
        }
        t_relay();
        break;
}

route[30] { 
   log (1, "In route 30 .... \n"); 
    if (method == "INVITE") 
    { 
        t_on_reply("1"); 
        if (t_check_status ("408") || t_check_status ("501") || t_check_status ("500") || t_check_status("504") || t_check_status("503") || t_check_status("400")) 
	{ 
              if (!worksmart_get_dialplan("2", "1")) 
              { 
                 sl_send_reply("404", "Not found"); 
              } 
            break; 
        } 
    } 
    t_relay(); 
    break; 
}



# FAILURE ROUTES
failure_route[2]{
        log(1,"FAILURE ROUTE 2 \n");
        route (2);
        break;
}

failure_route[3]{
        log(1,"FAILURE ROUTE 3 \n");
        route (3);
        break;
}

failure_route[4]{
        log(1,"FAILURE ROUTE 4 \n");
        route (4);
        break;
}

failure_route[5]{
        log(1, "FAILURE ROUTE 5\n");
        route(5);
        break;
}

failure_route[6]{
        log(1, "FAILURE ROUTE 6\n");
#       drop();
	route(26);
        break;
}

failure_route[7]{
	log(1,"FAILURE ROUTE 7 \n");
	route (27);
	break;
}

failure_route[8]{
        log(1,"FAILURE ROUTE 8 \n");
        route (28);
        break;
}

failure_route[9]{
        log(1, "FAILURE ROUTE 9\n");
        t_relay();
        break;
}

# MEDIA SERVER FAILURE ROUTES -- DO NOT CONFUSE WITH FAILOVER ROUTES
failure_route[11] {
        log(1, "FAILURE ROUTE 11\n");
        route(6);
        break;
}

failure_route[12] {
        log(1, "FAILURE ROUTE 12\n");
        route(7);
        break;
}

failure_route[13] {
        log(1, "FAILURE ROUTE 13\n");
        route(8);
        break;
}

failure_route[14] {
        log(1, "FAILURE ROUTE 14\n");
        route(9);
        break;
}

failure_route[15] {
        log(1, "FAILURE ROUTE 15\n");
        route(10);
        break;
}

# OMS SERVER FAILURE ROUTES -- DO NOT CONFUSE WITH FAILOVER ROUTES
failure_route[16] {
        log(1, "FAILURE ROUTE 16\n");
        route(16);
        break;
}

failure_route[17] {
        log(1, "FAILURE ROUTE 17\n");
        route(17);
        break;
}

failure_route[18] {
        log(1, "FAILURE ROUTE 18\n");
        route(18);
        break;
}

failure_route[19] {
        log(1, "FAILURE ROUTE 19\n");
        route(19);
        break;
}

failure_route[20] {
        log(1, "FAILURE ROUTE 20\n");
        route(20);
        break;
}

# ACD SERVER FAILURE ROUTES -- DO NOT CONFUSE WITH FAILOVER ROUTES -- NOT USED AT THE MOMENT
failure_route[21] {
        log(1, "FAILURE ROUTE 21\n");
        route(11);
        break;
}

failure_route[22] {
        log(1, "FAILURE ROUTE 22\n");
        route(12);
        break;
}

failure_route[23] {
        log(1, "FAILURE ROUTE 23\n");
        route(13);
        break;
}

failure_route[24] {
        log(1, "FAILURE ROUTE 24\n");
        route(14);
        break;
}

failure_route[25] {
        log(1, "FAILURE ROUTE 25\n");
        route(15);
        break;
}

#Supervisor Transfer failover Route
failure_route[25] {
        log(1, "FAILURE ROUTE 25\n");
        route(21);
        break;
}

failure_route[26] {
        log(1, "FAILURE ROUTE 26\n");
        route(22);
        break;
}

failure_route[27] {
        log(1, "FAILURE ROUTE 27\n");
        route(23);
        break;
}

failure_route[28] {
        log(1, "FAILURE ROUTE 28\n");
        route(24);
        break;
}

failure_route[29] {
        log(1, "FAILURE ROUTE 29\n");
        route(29);
        break;
}

failure_route[30] {
        log(1, "FAILURE ROUTE 30\n");
        route(30);
        break;
}


# REPLY ROUTES
onreply_route[1] {
        if (search("Remote-Party-ID: "))
        {
                remove_hf("Remote-Party-ID");

        }
	if(t_check_status ("3[0-9][0-9]|4[0-9][0-9]|5[0-9][0-9]|6[0-9][0-9]")){
		ws_process_response();
	}
				if (t_check_status ("302|301|503")) {
        		log(1, "Moved Temporarily\n\n");
						ws_process_302("1");
				}
				break;
}

onreply_route[2] {
        log(1,"on_reply_route - 2 called\n");
	if(t_check_status ("3[0-9][0-9]|4[0-9][0-9]|5[0-9][0-9]|6[0-9][0-9]")){
		ws_process_response();
	}
				if (t_check_status ("302|301|503")) {
					log(1, "Moved Temporarily\n\n");
					ws_process_302("1");
				}

        break;
}

onreply_route[10] {
   log(1,"We are in on_reply(3) for fixing contact for second 200 OK\n");
   if(t_check_status ("3[0-9][0-9]|4[0-9][0-9]|5[0-9][0-9]|6[0-9][0-9]")){
	   ws_process_response();
   }
   t_terminate_duplicate("1");

	 if (t_check_status ("302|301|503")) {
	 		log(1, "Moved Temporarily\n\n");
			ws_process_302("1");
		}

   break;
}

